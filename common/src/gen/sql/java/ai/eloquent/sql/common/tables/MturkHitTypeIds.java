/*
 * This file is generated by jOOQ.
*/
package ai.eloquent.sql.common.tables;


import ai.eloquent.sql.common.Common;
import ai.eloquent.sql.common.Indexes;
import ai.eloquent.sql.common.Keys;
import ai.eloquent.sql.common.tables.records.MturkHitTypeIdsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MturkHitTypeIds extends TableImpl<MturkHitTypeIdsRecord> {

    private static final long serialVersionUID = -986636562;

    /**
     * The reference instance of <code>common.mturk_hit_type_ids</code>
     */
    public static final MturkHitTypeIds MTURK_HIT_TYPE_IDS = new MturkHitTypeIds();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MturkHitTypeIdsRecord> getRecordType() {
        return MturkHitTypeIdsRecord.class;
    }

    /**
     * The column <code>common.mturk_hit_type_ids.id</code>.
     */
    public final TableField<MturkHitTypeIdsRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>common.mturk_hit_type_ids.title</code>.
     */
    public final TableField<MturkHitTypeIdsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>common.mturk_hit_type_ids.description</code>.
     */
    public final TableField<MturkHitTypeIdsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(2000).nullable(false), this, "");

    /**
     * The column <code>common.mturk_hit_type_ids.base_pay_dollars</code>.
     */
    public final TableField<MturkHitTypeIdsRecord, String> BASE_PAY_DOLLARS = createField("base_pay_dollars", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>common.mturk_hit_type_ids.hit_lifetime</code>.
     */
    public final TableField<MturkHitTypeIdsRecord, Long> HIT_LIFETIME = createField("hit_lifetime", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>common.mturk_hit_type_ids.auto_approve_delay</code>.
     */
    public final TableField<MturkHitTypeIdsRecord, Long> AUTO_APPROVE_DELAY = createField("auto_approve_delay", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>common.mturk_hit_type_ids.production</code>.
     */
    public final TableField<MturkHitTypeIdsRecord, Byte> PRODUCTION = createField("production", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>common.mturk_hit_type_ids</code> table reference
     */
    public MturkHitTypeIds() {
        this(DSL.name("mturk_hit_type_ids"), null);
    }

    /**
     * Create an aliased <code>common.mturk_hit_type_ids</code> table reference
     */
    public MturkHitTypeIds(String alias) {
        this(DSL.name(alias), MTURK_HIT_TYPE_IDS);
    }

    /**
     * Create an aliased <code>common.mturk_hit_type_ids</code> table reference
     */
    public MturkHitTypeIds(Name alias) {
        this(alias, MTURK_HIT_TYPE_IDS);
    }

    private MturkHitTypeIds(Name alias, Table<MturkHitTypeIdsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MturkHitTypeIds(Name alias, Table<MturkHitTypeIdsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Common.COMMON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MTURK_HIT_TYPE_IDS_ID, Indexes.MTURK_HIT_TYPE_IDS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MturkHitTypeIdsRecord> getPrimaryKey() {
        return Keys.KEY_MTURK_HIT_TYPE_IDS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MturkHitTypeIdsRecord>> getKeys() {
        return Arrays.<UniqueKey<MturkHitTypeIdsRecord>>asList(Keys.KEY_MTURK_HIT_TYPE_IDS_PRIMARY, Keys.KEY_MTURK_HIT_TYPE_IDS_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MturkHitTypeIds as(String alias) {
        return new MturkHitTypeIds(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MturkHitTypeIds as(Name alias) {
        return new MturkHitTypeIds(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MturkHitTypeIds rename(String name) {
        return new MturkHitTypeIds(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MturkHitTypeIds rename(Name name) {
        return new MturkHitTypeIds(name, null);
    }
}
