/*
 * This file is generated by jOOQ.
*/
package ai.eloquent.sql.common.tables.records;


import ai.eloquent.sql.common.tables.SqlLock;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SqlLockRecord extends UpdatableRecordImpl<SqlLockRecord> implements Record3<String, String, LocalDateTime> {

    private static final long serialVersionUID = -1788673666;

    /**
     * Setter for <code>common.sql_lock.lock_name</code>.
     */
    public SqlLockRecord setLockName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>common.sql_lock.lock_name</code>.
     */
    public String getLockName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>common.sql_lock.host</code>.
     */
    public SqlLockRecord setHost(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>common.sql_lock.host</code>.
     */
    public String getHost() {
        return (String) get(1);
    }

    /**
     * Setter for <code>common.sql_lock.expire_at</code>.
     */
    public SqlLockRecord setExpireAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>common.sql_lock.expire_at</code>.
     */
    public LocalDateTime getExpireAt() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SqlLock.SQL_LOCK.LOCK_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SqlLock.SQL_LOCK.HOST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return SqlLock.SQL_LOCK.EXPIRE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getLockName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getHost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component3() {
        return getExpireAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getLockName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getHost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getExpireAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlLockRecord value1(String value) {
        setLockName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlLockRecord value2(String value) {
        setHost(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlLockRecord value3(LocalDateTime value) {
        setExpireAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlLockRecord values(String value1, String value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SqlLockRecord
     */
    public SqlLockRecord() {
        super(SqlLock.SQL_LOCK);
    }

    /**
     * Create a detached, initialised SqlLockRecord
     */
    public SqlLockRecord(String lockName, String host, LocalDateTime expireAt) {
        super(SqlLock.SQL_LOCK);

        set(0, lockName);
        set(1, host);
        set(2, expireAt);
    }
}
