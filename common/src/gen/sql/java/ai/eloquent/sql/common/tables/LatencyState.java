/*
 * This file is generated by jOOQ.
*/
package ai.eloquent.sql.common.tables;


import ai.eloquent.sql.common.Common;
import ai.eloquent.sql.common.Indexes;
import ai.eloquent.sql.common.Keys;
import ai.eloquent.sql.common.tables.records.LatencyStateRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LatencyState extends TableImpl<LatencyStateRecord> {

    private static final long serialVersionUID = 683667500;

    /**
     * The reference instance of <code>common.latency_state</code>
     */
    public static final LatencyState LATENCY_STATE = new LatencyState();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LatencyStateRecord> getRecordType() {
        return LatencyStateRecord.class;
    }

    /**
     * The column <code>common.latency_state.timestamp</code>.
     */
    public final TableField<LatencyStateRecord, LocalDateTime> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>common.latency_state.latency</code>.
     */
    public final TableField<LatencyStateRecord, Long> LATENCY = createField("latency", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>common.latency_state.onlineWorkers</code>.
     */
    public final TableField<LatencyStateRecord, Integer> ONLINEWORKERS = createField("onlineWorkers", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>common.latency_state</code> table reference
     */
    public LatencyState() {
        this(DSL.name("latency_state"), null);
    }

    /**
     * Create an aliased <code>common.latency_state</code> table reference
     */
    public LatencyState(String alias) {
        this(DSL.name(alias), LATENCY_STATE);
    }

    /**
     * Create an aliased <code>common.latency_state</code> table reference
     */
    public LatencyState(Name alias) {
        this(alias, LATENCY_STATE);
    }

    private LatencyState(Name alias, Table<LatencyStateRecord> aliased) {
        this(alias, aliased, null);
    }

    private LatencyState(Name alias, Table<LatencyStateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Common.COMMON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LATENCY_STATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LatencyStateRecord> getPrimaryKey() {
        return Keys.KEY_LATENCY_STATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LatencyStateRecord>> getKeys() {
        return Arrays.<UniqueKey<LatencyStateRecord>>asList(Keys.KEY_LATENCY_STATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LatencyState as(String alias) {
        return new LatencyState(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LatencyState as(Name alias) {
        return new LatencyState(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LatencyState rename(String name) {
        return new LatencyState(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LatencyState rename(Name name) {
        return new LatencyState(name, null);
    }
}
